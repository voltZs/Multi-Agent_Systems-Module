package mas.coursework;

import java.util.HashMap;

import mas.coursework_ontology.elements.Component;

public class Warehouse {
	int dailyCharge;
	HashMap<String, WarehouseSection> sections;
	
	public Warehouse(int dailyCharge){
		this.dailyCharge = dailyCharge;
		
		sections = new HashMap<>();
		sections.put("screen", new WarehouseSection());
		sections.put("battery", new WarehouseSection());
		sections.put("storage", new WarehouseSection());
		sections.put("ram", new WarehouseSection());
		
	}
	
	public Double calculateStorageCharge(){
		Double charge = 0.0;
		for (String sectionType : sections.keySet()){
			charge += sections.get(sectionType).sumCharges();
		}
		return charge;
	}
	
	public void addToSection(Component newComponent){
		String type = newComponent.getType();
		sections.get(type).addComponent(newComponent);
	}
	
	
	
	
	private class WarehouseSection{
		HashMap<String, Aisle> aisles;
//		HashMap<Component, Integer> stock;
		
		public WarehouseSection(){
			aisles = new HashMap<>();
		}
		
		public Double sumCharges(){
			Double sum = 0.00;
//			for(Component comp: stock.keySet()){
//				sum += (stock.get(comp) * dailyCharge);
//			}
			return sum;
		}
		
		public void addToSection(Component comp){
			
			stock.put(comp, 0);
		}
		
		private class Aisle{
			HashMap<Component, Integer> stock;
			
			public Aisle(){
				stock = new HashMap<>();
			}
			
		}
	}
}
